# StreamBridge Kubernetes Deployment Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: streambridge-config
  labels:
    app: streambridge
data:
  NODE_ENV: "production"
  PORT: "5045"
  SERVICE_NAME: "streambridge"
  WEBSOCKET_PATH: "/ws"
  KAFKA_BROKERS: "kafka-service:9092"
  RABBITMQ_HOST: "rabbitmq-service"
  RABBITMQ_PORT: "5672"
  RABBITMQ_VHOST: "/"
  LOG_LEVEL: "info"
  METRICS_ENABLED: "true"
  VALIDATE_MESSAGES: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: streambridge-secrets
  labels:
    app: streambridge
type: Opaque
data:
  # These are example values, replace with real encoded secrets in production
  # Values are base64 encoded: echo -n "your-secret" | base64
  JWT_SECRET: bWVzc2FnZS1odWItand0LXNlY3JldC1rZXktY2hhbmdlLWluLXByb2R1Y3Rpb24=
  ENCRYPTION_KEY: MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDE=
  RABBITMQ_USERNAME: Z3Vlc3Q=
  RABBITMQ_PASSWORD: Z3Vlc3Q=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: streambridge-backend
  labels:
    app: streambridge
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: streambridge
      component: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: streambridge
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5045"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: backend
          image: streambridge-backend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5045
              name: http
          envFrom:
            - configMapRef:
                name: streambridge-config
            - secretRef:
                name: streambridge-secrets
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 1000m
              memory: 1Gi
          livenessProbe:
            httpGet:
              path: /health
              port: 5045
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/detailed
              port: 5045
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
          volumeMounts:
            - name: logs
              mountPath: /app/logs
      volumes:
        - name: logs
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: streambridge-frontend
  labels:
    app: streambridge
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: streambridge
      component: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: streambridge
        component: frontend
    spec:
      containers:
        - name: frontend
          image: streambridge-frontend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: http
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 2
---
apiVersion: v1
kind: Service
metadata:
  name: streambridge-backend
  labels:
    app: streambridge
    component: backend
spec:
  ports:
    - port: 5045
      targetPort: 5045
      name: http
  selector:
    app: streambridge
    component: backend
---
apiVersion: v1
kind: Service
metadata:
  name: streambridge-frontend
  labels:
    app: streambridge
    component: frontend
spec:
  ports:
    - port: 80
      targetPort: 80
      name: http
  selector:
    app: streambridge
    component: frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: streambridge-ingress
  labels:
    app: streambridge
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  rules:
    - host: streambridge.example.com
      http:
        paths:
          - path: /api(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: streambridge-backend
                port:
                  number: 5045
          - path: /ws
            pathType: Exact
            backend:
              service:
                name: streambridge-backend
                port:
                  number: 5045
          - path: /metrics
            pathType: Exact
            backend:
              service:
                name: streambridge-backend
                port:
                  number: 5045
          - path: /health(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: streambridge-backend
                port:
                  number: 5045
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: streambridge-frontend
                port:
                  number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: streambridge-backend-hpa
  labels:
    app: streambridge
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: streambridge-backend
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: streambridge-frontend-hpa
  labels:
    app: streambridge
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: streambridge-frontend
  minReplicas: 2
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70